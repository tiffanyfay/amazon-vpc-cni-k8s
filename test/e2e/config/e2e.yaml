---
apiVersion: v1
kind: Pod
metadata:
  namespace: cni-test
  name: cni-e2e
  labels:
    app: cni-e2e
spec:
  #hostNetwork: true
  serviceAccountName: "testpod"
  terminationGracePeriodSeconds: 180
  restartPolicy: Never
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: cni-tester
            operator: In
            values:
            - "true"
  containers:
  - name: cni-e2e
    image: 038954622175.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-e2e:latest
    imagePullPolicy: Always
    args: ["test/e2e/cni", "false"]
    env: 
    - name: TESTPOD_IMAGE_URI
      value: 038954622175.dkr.ecr.us-west-2.amazonaws.com/k8s-prow/amazon-k8s-cni-testpod:v1.5.0-rc1-45-ga5f8d7c9
      

# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   namespace: cni-test
#   name: cni-e2e
#   labels:
#     app: cni-e2e
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: cni-e2e
#   strategy:
#     type: RollingUpdate
#     rollingUpdate:
#       maxSurge: 5
#       maxUnavailable: 1
#   template:
#     metadata:
#       labels:
#         app: cni-e2e
#     spec:
#       serviceAccountName: "testpod"
#       terminationGracePeriodSeconds: 180
#       containers:
#       - name: cni-e2e
#         image: 038954622175.dkr.ecr.us-west-2.amazonaws.com/amazon-k8s-cni-e2e:latest
#         imagePullPolicy: Always
#       restartPolicy: OnFailure

# ---
# apiVersion: v1
# kind: Service
# metadata:
#     name: testpod-clusterip
#     namespace: cni-test
# spec: 
#     selector:
#         app: testpod
#     ports:
#     - port: 8080
# ---
# apiVersion: v1
# kind: Service
# metadata:
#     name: testpod-pod-ip
#     namespace: cni-test
# spec: 
#     selector:
#         app: testpod
#     clusterIP: None
#     ports:
#     - port: 8080
